<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="exit.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 8</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>27</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZAAAAGQCAYAAACAvzbMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABlaSURBVHhe7d0JtG31HAdwpRQlmlREpFEyZIhQZC4NyDJFhjIkQ0WKVCRzq9EYVhYiIlFC5mol
        wzJUMhQqQ6QypTJt63vsc9++5+377rm/1/NO930+a/1W/M/e+5x733v7e/be/+EWDQAUCBAASgQIACUC
        BIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgA
        JQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAASgQIACUCBIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoE
        CAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAA
        SgQIACUCBIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQI
        EABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAASgQIACUCBIASAQJAiQABoESAAFAiQAAoESAA
        lAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgR
        IACUCBAASgQIACUCBIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAA
        KBEgAJQIEABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAASgQIACUCBIASAQJAiQABoESAAFAi
        QAAoESAAlAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgAJQIEgBIBAkCJAAGgRIAA
        UCJAACgRIACUCBAASgQIACUCBIASAQJAiQABoESAAFAiQAAoESAAlAgQZnTRRRc1Rx99dLP77rs32223
        XbP55ps3G220UbPVVls1u+yyS7Pvvvs2Z5xxRnPNNde0ewDLEgHCQk455ZTm0Y9+dLPiiis2t7jFLWat
        9ddfv9l///2bSy+9tD0CsCwQIEz53ve+12y//fa9ITFOrb766s1RRx3VHg2Y7wQIAx/96EebVVddtTcY
        5lo777xzc+WVV7ZHBuYrAUJz+OGH9wbB4tSmm27a/PSnP23fAZiPBMgy7thjj+0NgJuiNttss+b3v/99
        +07AfCNAlmHnnHNOs8IKK/Se/G+q2nHHHZt///vf7TsC84kAWUZdf/31zZZbbtl70r+p64QTTmjfFZhP
        BMgy6vjjj+892S+J2mSTTZobbrihfWdgvhAgNwOXX3558/nPf7555zvf2RxxxBHNW9/61ubEE09szj33
        3Oavf/1ru9X4rrvuusGAwL6T/ZKqk046qX13YL4QIBPsggsuaPbYY4/mdre7Xe9JObXxxhs3Rx555Jy+
        4Z966qm9x1qS9YhHPKJ9d2C+ECATKr2j5jIuY+utt24uvPDCdu9F22uvvXqPsSRrtdVWa37zm9+0nwCY
        DwTIBHrTm97UexKerdZdd93mu9/9bnuUfv/617/KD8/vec97Nttss81gxHnf67PVZz7zmfZTAPOBAJkw
        GRHed/IdtzbYYINFftP/85//3Kyzzjq9+85Uyy+//OCK6J///OfgGJnz6j73uU/vtouqY445ZrA/MD8I
        kAmSE/9aa63Ve/KdSz3taU9rj7iwvMdtb3vb3v1mqp122qnde4GzzjqrWW655Xq3n6kOOeSQdm9gPhAg
        E2S//fbrPfHOtXJiTw+tPpdddlmzyiqr9O43Ux100EHt3gtcccUVzUorrdS7/Ux1wAEHtHsD84EAmRBX
        X311s/baa/eeeId1r3vdazBt+p577jl4KN23zbCe//znt0ee7re//e2s+45WpnYflecZc70COeyww9q9
        gflAgEyIs88+u/ekO6ycxP/2t7+1WzfN+eef36yxxhq926YyeC+jzUf95S9/adZbb73efRZVBx98cPOn
        P/1p8BA+076n+3DfdouqDF4E5g8BMiHygLnvpJvKQ+zzzjuv3XKBvffeu3f71Morr9z84he/aLdcIPNS
        VR6Ap+585zsPemLd6la36n19tjr99NPbTwHMBwJkQhx44IG9J91UJjy85JJL2i0XOPTQQ3u3T2WfmcaF
        7LPPPr37LMlK198//OEP7ScA5gMBMiEWFQapvi6w2267be+2qSxHe/HFF7dbTnfmmWf27rMk6/GPf3z7
        7sB8IUAmRNYh7zvxDis9p972trc1P/nJTwbPP3bbbbfe7Ya15pprNn/84x/bo0934403NltssUXvfkuq
        TjvttPbdgflCgEyI3KLKVUPfybdb4z5/eMxjHtMeud+HPvSh3v2WRKX3WB6+A/OLAJkQebj98Ic/vPcE
        XKl3v/vd7ZH7ZVT5gx/84N59b+o6+eST23cF5hMBMkEytqLvBDzXWn/99Ztrr722PerMfvjDH855UOFc
        65nPfGb7bsB8I0AmyH/+859m11137T0Rz6Uyn9a4PvKRj/Qe46aoBz7wgYO5t4D5SYBMmHR1zViLvhPy
        OPWyl72sPdL4slDVOM9f5lKZXj6j3oH5S4BMoEx4WHk+8frXv749wtxlxcNMB9933LlWplGprJQI3LwI
        kAmVaUsyuHBRqxEOKyPLzzjjjHbPukzTnpl8+95jnMpU8rklBiwbBMiEy3QkWWAqA/HudKc7DaZiT6hs
        vvnmgwfUH/vYx5q///3v7dY3jW9+85vN05/+9LEXjrr3ve89WKf9qquuao8ALAsEyM1IHkj/+te/bq68
        8srmH//4R9u65OS9PvnJTzYvf/nLBwMXH/WoRw3WNt9hhx2a5z73uc3b3/72wQqI/4/PAkweAQJAiQAB
        oESAAFAiQCZApjHJXFH577JUw58ZuHkSIBNgxx13bLbccsvBpIPLUuVnftWrXtX+FoCbGwEyAdI9t697
        7LJQT3ziE9vfAnBzI0AmwN3vfvfek+uyUE996lPb38KSlxmIsyZ8RsmPU9l+XD/+8Y8HY3KGlXXjJ1m6
        hGdtmS996UuDSTWhQoBMgG6A7LHHHs0JJ5zQHHfccc0666yzUPuxxx477YrlyU9+cvO+972vede73tXc
        7W53m2rfZZddpto33XTTqfasE/Le9763ec973jMYADhsz1Tyac808FtttdVC7dl+u+22m2p/5CMfOWhP
        PexhD5tqf8ADHjDYNu1PeMITptrvd7/7DdrzmXLLbtj+/wqQPG/J58nvLmu7j1P3uMc9msc+9rGDcTAZ
        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
        AaBEgABQIkAAKBEgAJQIEABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAASgQIACUCBIASAQJA
        iQABoESAAFAiQAAoESAAlAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgAJQIEgBIB
        AkCJAAGgRIAAUCJAACgRIACUCBAASgQIACUCBIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoECAAlAgSA
        EgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAASgQIACUC
        BIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgA
        JQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAASgQIACUCBIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoE
        CAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAA
        SgQIACUCBIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQI
        EABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgRIACUCBAASgQIACUCBIASAQJAiQABoESAAFAiQAAoESAA
        lAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAAKBEgAJQIEABKBAgAJQIEgBIBAkCJAAGgRIAAUCJAACgR
        IACUCBAASgQIACUCBIASAQJAiQABoESAAFAiQAAoESAAlAgQAEoECAAlAgSAEgECQIkAAaBEgABQIkAA
        KBEgAJQIEABKBAgABU3zX6PTTKQM3OD+AAAAAElFTkSuQmCC
</value>
  </data>
</root>